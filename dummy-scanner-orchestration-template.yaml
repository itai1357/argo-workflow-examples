apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  labels:
    type: dummy-scanners-orchestration-workflow-template
  name: dummy-scanners-orchestration-workflow-template
  namespace: {{.Values.namespaceOverride}}
spec:
  arguments:
    parameters:
    - name: scan-id
      value: scan-id-123
    - name: files-path
      value: files.json
    - name: previous-scan-id
      value: empty-value
    - name: source-code-path
      value: repo-files.tgz
    - name: output-files-path
      value: scan-id-123-output-files
    - name: output-findings-path
      value: scan-id-123-output-findings-files
    - name: output-assets-path
      value: scan-id-123-output-assets-files
    - name: source-type
      value: GITLAB
    - name: scanner-type
      value: IAC
    - name: trigger-type
      value: PERIODIC
    - name: patch-file-mappings
      value: ''
    - name: repository-id
      value: repository-id-not-exist
    - name: repository-asset-id
      value: repository-asset-id-not-exist
    - name: branch-name
      value: branch-not-exist
    - name: commit-hash
      value: commit-hash-not-exist
    - name: pr-id
      value: pre-id-not-exist
    - name: integration-id
      value: integration-id-not-exist
    - name: repository-owner
      value: empty-value
    - name: repository-name
      value: empty-value
    - name: pr-number
      value: '1'
    - name: scan-type
      value: empty-value
    - name: enforcement-rules
      value: empty-value
    - name: framework
      value: empty-value
    - name: scan-configuration
      value: empty-value
    - name: unzip-code-path
      value: empty-value
    - name: repository-is-public
    - name: trace-id
      value: missing-trace-id
  entrypoint: main
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  workflowMetadata:
    labelsFrom:
      name:
        expression: workflow.name
      uid:
        expression: workflow.uid
  templates:
    - name: main
      steps:
      - - name: copy-files
          template: copy-gcs-files
    - name: copy-gcs-files
      inputs:
        parameters:
        - name: bucket-name
          valueFrom:
            configMapKeyRef:
              key: WORKFLOWS_ARTIFACTS_BUCKET
              name: cas-configmap
      container:
        image: google/cloud-sdk
        command: [ "/bin/bash", "-c" ]
        args: [
          "gsutil cp gs://{{`{{inputs.parameters.bucket-name}}`}}/scans/9d861e3d-b0bc-4da0-a47a-881613ab42e0/67e4eb4a6ad1cd261c20a504/test_pr_v2/scanners/{{`{{workflow.parameters.scanner-type}}`}}/aggregated_results/assets.json gs://{{`{{inputs.parameters.bucket-name}}`}}/{{`{{workflow.parameters.output-assets-path}}`}} && gsutil cp gs://{{`{{inputs.parameters.bucket-name}}`}}/scans/9d861e3d-b0bc-4da0-a47a-881613ab42e0/67e4eb4a6ad1cd261c20a504/test_pr_v2/scanners/{{`{{workflow.parameters.scanner-type}}`}}/aggregated_results/findings.json gs://{{`{{inputs.parameters.bucket-name}}`}}/{{`{{workflow.parameters.output-findings-path}}`}}"
        ]